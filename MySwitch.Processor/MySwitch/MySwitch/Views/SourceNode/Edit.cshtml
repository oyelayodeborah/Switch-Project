@model MySwitch.Core.Models.SourceNode
@{
    ViewBag.Title = "Edit Source Node Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-md-6">

        @if (ViewBag.Message != null)
        {
            if (ViewBag.Message == "Success")
            {
                <div class="alert alert-success">
                    <p>@ViewBag.Message <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

                </div>

            }
            else if (ViewBag.Message == "Exist")
            {
                <div class="alert alert-error">
                    <p>Branch Name Exist <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

                </div>

            }
            else if (ViewBag.Message == "Error")
            {
                <div class="alert alert-error">
                    <p>@ViewBag.Message <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

                </div>

            }
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Name)
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = 255, pattern = "^[A-Z\\sa-z]+$", minlength = 6 } })
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.HostName)
                @Html.EditorFor(model => model.HostName, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = 255, pattern = "^(?=.*[^\\.]$)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.?){4}$", minlength = 6 } })
                @Html.ValidationMessageFor(model => model.HostName)
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.IPAddress)
            @Html.EditorFor(model => model.IPAddress, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = 15, pattern = "^(?=.*[^\\.]$)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.?){4}$", minlength = 7 } })
            @Html.ValidationMessageFor(model => model.IPAddress)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Port)
            @Html.EditorFor(model => model.Port, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = 6, pattern = "\\d+$" } })
            @Html.ValidationMessageFor(model => model.Port)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SchemeId)
            @Html.DropDownListFor(model => model.SchemeId, new SelectList(Model.Schemes,
                "Id", "Name"),"Choose an Option", new {@class = "form-control", required="required", @data_live_search = "true" })
            @Html.ValidationMessageFor(model => model.SchemeId, "", new { @class = "text-danger" })
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.Status)
            @Html.EnumDropDownListFor(m => m.Status, new { @class = "form-control", required = "required", @data_live_search = "true" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>*@



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="SUBMIT" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section ViewSpecificJavascript
    {
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $(".alert").fadeOut(100, null);
            },
                3000);
        });
    </script>
}